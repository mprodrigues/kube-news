pipeline {
    agent any

    stages {

        stage('Build Docker Image'){ 
            steps {
                script {
                    dockerapp = docker.build("mprodrigues/kube-news:${env.BUILD_ID}", '-f ./src/Dockerfile ./src')
                }
            }
        }
        stage('Push Docker Image'){ 
            steps {
                script {
                    dockerapp.withRegistr('http:;;registry.hub.docker.com', 'dockerhub'){
                        dockerapp.push('latest')                        
                        dockerapp.push("${env.BUILD_ID}")                       

                    }
                }
            }
        }
        stage('Deploy Kubernets'){ 
            steps {
                script {
                    withKubeConfig(credencialsId: 'kubeconfig'){
                        sh 'kubectl apply -f ./src/k8s/deployment.yaml'    
                    }
                }
            }
        }

    }
}